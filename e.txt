using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Identity;

namespace Core.Entities;

public class AppUser : IdentityUser
{
    [StringLength(maximumLength: 256, MinimumLength = 3)]
    public string FirstName { get; set; }

    [StringLength(maximumLength: 256, MinimumLength = 3)]
    public string LastName { get; set; }

    public List<ExamResult> ExamResults { get; set; } = [];
}namespace Core.Entities;

public class BaseModel
{
    public int Id { get; set; }
}using System.ComponentModel.DataAnnotations;
using Core.Enums;

namespace Core.Entities;

public class Exam : BaseModel
{
    public TimeSpan Duration { get; set; }
    public string ModelName { get; set; } = string.Empty;
    public List<ExamResult> ExamResults { get; set; } = [];
    public List<ExamQuestion> ExamQuestions { get; set; } = [];
    public int SubjectId { get; set; }

    public Subject Subject { get; set; }
    public List<Question> Questions { get; set; } = [];
}

public class ExamResult : BaseModel
{
    [Range(0, int.MaxValue)] public int TotalScore { get; set; }

    [Range(0, 1000)] public decimal StudentScore { get; set; }

    public ExamResultStatus Status { get; set; } = ExamResultStatus.UnSubmitted;

    [Required] public DateTime StartTime { get; set; }

    public DateTime? EndTime { get; set; }

    [Required] public string AppUserId { get; set; }

    public AppUser AppUser { get; set; } // Navigational

    [Required] public int ExamId { get; set; }

    public Exam Exam { get; set; } // Navigational
}ï»¿namespace Core.Entities;

public class ExamQuestion
{
    public int ExamId { get; set; }
    public Exam Exam { get; set; }

    public int QuestionId { get; set; }
    public Question Question { get; set; }
}namespace Core.Entities;

public class Question : BaseModel
{
    public string Text { get; set; } = string.Empty;
    public List<Answer> Answers { get; set; } = [];
    public List<ExamQuestion> ExamQuestions { get; set; } = [];

    public int SubjectId { get; set; }
    public Subject Subject { get; set; }
}

public class Answer : BaseModel
{
    public string Text { get; set; } = string.Empty;
    public bool IsCorrect { get; set; }

    public int QuestionId { get; set; }
    public Question Question { get; set; }
}using System.ComponentModel.DataAnnotations;

namespace Core.Entities;

public class Subject : BaseModel
{
    [StringLength(256, MinimumLength = 3)] public string Name { get; set; } = string.Empty;

    public List<Question> Questions { get; set; } = [];
    public List<Exam> Exams { get; set; } = [];
}